---
# tasks file for k3s

- name: set k3s ansible token
  block:
    - name: lookup k3s ansible token
      slurp:
        src: "{{ __k3s_ansible_token_file }}"
      register: r_slurp_k3s_ansible_token
      when: __k3s_primary | bool

    - name: set fact for k3s ansible token
      set_fact:
        __k3s_ansible_token: "{{ r_slurp_k3s_ansible_token['content'] | b64decode }}"
      when: __k3s_primary | bool

  rescue:
    - name: generate k3s ansible token
      set_fact:
        __k3s_ansible_token: "{{ lookup('password', '/dev/null chars=ascii_lowercase,ascii_uppercase,digits length=96') }}"

  always:
    - name: write k3s ansible token
      copy:
        dest: "{{ __k3s_ansible_token_file }}"
        owner: root
        group: root
        mode: 0400
        content: "{{ hostvars[groups['servers'][0]]['__k3s_ansible_token'] }}"

- name: create k3s server config file
  template:
    src: "{{ __k3s_config_template }}"
    dest: "{{ __k3s_config_file }}"
    owner: root
    group: root
    mode: "0440"

- name: run installer server nodes
  include_tasks: run_installer.yml

- name: ensure the k3s server service is started
  service:
    name: "{{ __k3s_service_name }}"
    state: started
    enabled: true

- name: pause for 5 seconds to wait for k3s node token
  pause:
    seconds: 5

- name: create root's kubeconfig
  block:
    - name: create .kube dir
      file:
        path: /root/.kube
        state: directory
        mode: "0700"
        owner: root
        group: root

    - name: copy k3s.yaml to ~/.kube/config
      copy:
        src: /etc/rancher/k3s/k3s.yaml
        remote_src: true
        dest: /root/.kube/config
        owner: root
        group: root
        mode: "0600"
